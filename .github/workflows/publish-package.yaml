name: publish-image

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'docs/**'
      - 'mkdocs.yml'
jobs:
  call-publish-image:
    name: Publish Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install up cli
        run: |
          curl -sL "https://cli.upbound.io" | sh
          sudo mv up /usr/local/bin/
          up version
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.35.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
      - name: Login to Upbound Marketplace
        uses: docker/login-action@v2
        with:
          registry: xpkg.upbound.io
          username: ${{ secrets.XPKG_ACCESS_ID }}
          password: ${{ secrets.XPKG_ACCESS_TOKEN }}
      - name: Create working directory
        run: |
          mkdir -p controller-package
          cd controller-package
      - name: Build and Publish
        working-directory: controller-package
        env:
          UPBOUND_ACCOUNT: upbound-demo
        run: |
          # Attributes
          source ../.chart-attributes
          cp ../crossplane.yaml .

          # Pull the chart
          helm pull $CHART_NAME --repo $REPO_URL --version $CHART_VERSION

          # Build resources
          mkdir helm
          mv $CHART_NAME-$CHART_VERSION.tgz helm/chart.tgz
          mkdir crds
          helm template $RELEASE_NAME helm/chart.tgz -n $RELEASE_NAME --include-crds --kube-version=1.25.0 | \
            yq e 'select(.kind == "CustomResourceDefinition")' - | \
            yq -s '("crds/" + .metadata.name + ".yaml")' -

          # List the structure for verification
          find . -type f | sort

          # Build artifact
          up xpkg build

          # Find artifact
          XPKG_FILENAME=$(find . -name "*.xpkg" -type f -printf "%f\n")

          # Publish artifact
          export CONTROLLER_NAME=$(printf '%s' "$GITHUB_REPOSITORY" | sed 's/.*\///')

          up xpkg push xpkg.upbound.io/$UPBOUND_ACCOUNT/$CONTROLLER_NAME:$CHART_VERSION -f $XPKG_FILENAME
